// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Workflow workflow
//
// swagger:model workflow
type Workflow struct {

	// message
	Message string `json:"message,omitempty"`

	// tracking urls
	TrackingUrls []string `json:"tracking_urls"`
}

// Validate validates this workflow
func (m *Workflow) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTrackingUrls(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Workflow) validateTrackingUrls(formats strfmt.Registry) error {
	if swag.IsZero(m.TrackingUrls) { // not required
		return nil
	}

	for i := 0; i < len(m.TrackingUrls); i++ {

		if err := validate.MinLength("tracking_urls"+"."+strconv.Itoa(i), "body", m.TrackingUrls[i], 1); err != nil {
			return err
		}

	}

	return nil
}

// ContextValidate validates this workflow based on context it is used
func (m *Workflow) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Workflow) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Workflow) UnmarshalBinary(b []byte) error {
	var res Workflow
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
