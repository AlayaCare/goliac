// Code generated by go-swagger; DO NOT EDIT.

package app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goliac-project/goliac/swagger_gen/models"
)

// GetUnmanagedOKCode is the HTTP code returned for type GetUnmanagedOK
const GetUnmanagedOKCode int = 200

/*
GetUnmanagedOK get Goliac unmanaged resources metrics

swagger:response getUnmanagedOK
*/
type GetUnmanagedOK struct {

	/*
	  In: Body
	*/
	Payload *models.Unmanaged `json:"body,omitempty"`
}

// NewGetUnmanagedOK creates GetUnmanagedOK with default headers values
func NewGetUnmanagedOK() *GetUnmanagedOK {

	return &GetUnmanagedOK{}
}

// WithPayload adds the payload to the get unmanaged o k response
func (o *GetUnmanagedOK) WithPayload(payload *models.Unmanaged) *GetUnmanagedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get unmanaged o k response
func (o *GetUnmanagedOK) SetPayload(payload *models.Unmanaged) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUnmanagedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetUnmanagedDefault generic error response

swagger:response getUnmanagedDefault
*/
type GetUnmanagedDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetUnmanagedDefault creates GetUnmanagedDefault with default headers values
func NewGetUnmanagedDefault(code int) *GetUnmanagedDefault {
	if code <= 0 {
		code = 500
	}

	return &GetUnmanagedDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get unmanaged default response
func (o *GetUnmanagedDefault) WithStatusCode(code int) *GetUnmanagedDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get unmanaged default response
func (o *GetUnmanagedDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get unmanaged default response
func (o *GetUnmanagedDefault) WithPayload(payload *models.Error) *GetUnmanagedDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get unmanaged default response
func (o *GetUnmanagedDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetUnmanagedDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
