// Code generated by go-swagger; DO NOT EDIT.

package app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goliac-project/goliac/swagger_gen/models"
)

// GetTeamOKCode is the HTTP code returned for type GetTeamOK
const GetTeamOKCode int = 200

/*
GetTeamOK get team details especially users and repositories

swagger:response getTeamOK
*/
type GetTeamOK struct {

	/*
	  In: Body
	*/
	Payload *models.TeamDetails `json:"body,omitempty"`
}

// NewGetTeamOK creates GetTeamOK with default headers values
func NewGetTeamOK() *GetTeamOK {

	return &GetTeamOK{}
}

// WithPayload adds the payload to the get team o k response
func (o *GetTeamOK) WithPayload(payload *models.TeamDetails) *GetTeamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team o k response
func (o *GetTeamOK) SetPayload(payload *models.TeamDetails) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetTeamDefault generic error response

swagger:response getTeamDefault
*/
type GetTeamDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamDefault creates GetTeamDefault with default headers values
func NewGetTeamDefault(code int) *GetTeamDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTeamDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get team default response
func (o *GetTeamDefault) WithStatusCode(code int) *GetTeamDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get team default response
func (o *GetTeamDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get team default response
func (o *GetTeamDefault) WithPayload(payload *models.Error) *GetTeamDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team default response
func (o *GetTeamDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
