// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goliac-project/goliac/swagger_gen/models"
)

// GetWorkflowOKCode is the HTTP code returned for type GetWorkflowOK
const GetWorkflowOKCode int = 200

/*
GetWorkflowOK Workflow information

swagger:response getWorkflowOK
*/
type GetWorkflowOK struct {

	/*
	  In: Body
	*/
	Payload *GetWorkflowOKBody `json:"body,omitempty"`
}

// NewGetWorkflowOK creates GetWorkflowOK with default headers values
func NewGetWorkflowOK() *GetWorkflowOK {

	return &GetWorkflowOK{}
}

// WithPayload adds the payload to the get workflow o k response
func (o *GetWorkflowOK) WithPayload(payload *GetWorkflowOKBody) *GetWorkflowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow o k response
func (o *GetWorkflowOK) SetPayload(payload *GetWorkflowOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowUnauthorizedCode is the HTTP code returned for type GetWorkflowUnauthorized
const GetWorkflowUnauthorizedCode int = 401

/*
GetWorkflowUnauthorized Unauthorized

swagger:response getWorkflowUnauthorized
*/
type GetWorkflowUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWorkflowUnauthorized creates GetWorkflowUnauthorized with default headers values
func NewGetWorkflowUnauthorized() *GetWorkflowUnauthorized {

	return &GetWorkflowUnauthorized{}
}

// WithPayload adds the payload to the get workflow unauthorized response
func (o *GetWorkflowUnauthorized) WithPayload(payload *models.Error) *GetWorkflowUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow unauthorized response
func (o *GetWorkflowUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkflowForbiddenCode is the HTTP code returned for type GetWorkflowForbidden
const GetWorkflowForbiddenCode int = 403

/*
GetWorkflowForbidden Forbidden

swagger:response getWorkflowForbidden
*/
type GetWorkflowForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWorkflowForbidden creates GetWorkflowForbidden with default headers values
func NewGetWorkflowForbidden() *GetWorkflowForbidden {

	return &GetWorkflowForbidden{}
}

// WithPayload adds the payload to the get workflow forbidden response
func (o *GetWorkflowForbidden) WithPayload(payload *models.Error) *GetWorkflowForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow forbidden response
func (o *GetWorkflowForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetWorkflowDefault generic error response

swagger:response getWorkflowDefault
*/
type GetWorkflowDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetWorkflowDefault creates GetWorkflowDefault with default headers values
func NewGetWorkflowDefault(code int) *GetWorkflowDefault {
	if code <= 0 {
		code = 500
	}

	return &GetWorkflowDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get workflow default response
func (o *GetWorkflowDefault) WithStatusCode(code int) *GetWorkflowDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get workflow default response
func (o *GetWorkflowDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get workflow default response
func (o *GetWorkflowDefault) WithPayload(payload *models.Error) *GetWorkflowDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get workflow default response
func (o *GetWorkflowDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkflowDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
