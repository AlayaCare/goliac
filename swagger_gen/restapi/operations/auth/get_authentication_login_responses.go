// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/goliac-project/goliac/swagger_gen/models"
)

// GetAuthenticationLoginFoundCode is the HTTP code returned for type GetAuthenticationLoginFound
const GetAuthenticationLoginFoundCode int = 302

/*
GetAuthenticationLoginFound redirect to github login

swagger:response getAuthenticationLoginFound
*/
type GetAuthenticationLoginFound struct {
	/*The URL to redirect to

	 */
	Location strfmt.URI `json:"Location"`
}

// NewGetAuthenticationLoginFound creates GetAuthenticationLoginFound with default headers values
func NewGetAuthenticationLoginFound() *GetAuthenticationLoginFound {

	return &GetAuthenticationLoginFound{}
}

// WithLocation adds the location to the get authentication login found response
func (o *GetAuthenticationLoginFound) WithLocation(location strfmt.URI) *GetAuthenticationLoginFound {
	o.Location = location
	return o
}

// SetLocation sets the location to the get authentication login found response
func (o *GetAuthenticationLoginFound) SetLocation(location strfmt.URI) {
	o.Location = location
}

// WriteResponse to the client
func (o *GetAuthenticationLoginFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Location

	location := o.Location.String()
	if location != "" {
		rw.Header().Set("Location", location)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(302)
}

/*
GetAuthenticationLoginDefault generic error response

swagger:response getAuthenticationLoginDefault
*/
type GetAuthenticationLoginDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAuthenticationLoginDefault creates GetAuthenticationLoginDefault with default headers values
func NewGetAuthenticationLoginDefault(code int) *GetAuthenticationLoginDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAuthenticationLoginDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get authentication login default response
func (o *GetAuthenticationLoginDefault) WithStatusCode(code int) *GetAuthenticationLoginDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get authentication login default response
func (o *GetAuthenticationLoginDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get authentication login default response
func (o *GetAuthenticationLoginDefault) WithPayload(payload *models.Error) *GetAuthenticationLoginDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get authentication login default response
func (o *GetAuthenticationLoginDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAuthenticationLoginDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
