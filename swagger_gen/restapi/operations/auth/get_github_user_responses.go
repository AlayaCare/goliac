// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goliac-project/goliac/swagger_gen/models"
)

// GetGithubUserOKCode is the HTTP code returned for type GetGithubUserOK
const GetGithubUserOKCode int = 200

/*
GetGithubUserOK github user information

swagger:response getGithubUserOK
*/
type GetGithubUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.Githubuser `json:"body,omitempty"`
}

// NewGetGithubUserOK creates GetGithubUserOK with default headers values
func NewGetGithubUserOK() *GetGithubUserOK {

	return &GetGithubUserOK{}
}

// WithPayload adds the payload to the get github user o k response
func (o *GetGithubUserOK) WithPayload(payload *models.Githubuser) *GetGithubUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get github user o k response
func (o *GetGithubUserOK) SetPayload(payload *models.Githubuser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGithubUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetGithubUserUnauthorizedCode is the HTTP code returned for type GetGithubUserUnauthorized
const GetGithubUserUnauthorizedCode int = 401

/*
GetGithubUserUnauthorized unauthorized

swagger:response getGithubUserUnauthorized
*/
type GetGithubUserUnauthorized struct {
}

// NewGetGithubUserUnauthorized creates GetGithubUserUnauthorized with default headers values
func NewGetGithubUserUnauthorized() *GetGithubUserUnauthorized {

	return &GetGithubUserUnauthorized{}
}

// WriteResponse to the client
func (o *GetGithubUserUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(401)
}

/*
GetGithubUserDefault generic error response

swagger:response getGithubUserDefault
*/
type GetGithubUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGithubUserDefault creates GetGithubUserDefault with default headers values
func NewGetGithubUserDefault(code int) *GetGithubUserDefault {
	if code <= 0 {
		code = 500
	}

	return &GetGithubUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get github user default response
func (o *GetGithubUserDefault) WithStatusCode(code int) *GetGithubUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get github user default response
func (o *GetGithubUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get github user default response
func (o *GetGithubUserDefault) WithPayload(payload *models.Error) *GetGithubUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get github user default response
func (o *GetGithubUserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGithubUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
