// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goliac-project/goliac/swagger_gen/models"
)

// PostWorkflowOKCode is the HTTP code returned for type PostWorkflowOK
const PostWorkflowOKCode int = 200

/*
PostWorkflowOK Workflow executed

swagger:response postWorkflowOK
*/
type PostWorkflowOK struct {

	/*
	  In: Body
	*/
	Payload *models.Workflow `json:"body,omitempty"`
}

// NewPostWorkflowOK creates PostWorkflowOK with default headers values
func NewPostWorkflowOK() *PostWorkflowOK {

	return &PostWorkflowOK{}
}

// WithPayload adds the payload to the post workflow o k response
func (o *PostWorkflowOK) WithPayload(payload *models.Workflow) *PostWorkflowOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post workflow o k response
func (o *PostWorkflowOK) SetPayload(payload *models.Workflow) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWorkflowOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostWorkflowUnauthorizedCode is the HTTP code returned for type PostWorkflowUnauthorized
const PostWorkflowUnauthorizedCode int = 401

/*
PostWorkflowUnauthorized Unauthorized

swagger:response postWorkflowUnauthorized
*/
type PostWorkflowUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostWorkflowUnauthorized creates PostWorkflowUnauthorized with default headers values
func NewPostWorkflowUnauthorized() *PostWorkflowUnauthorized {

	return &PostWorkflowUnauthorized{}
}

// WithPayload adds the payload to the post workflow unauthorized response
func (o *PostWorkflowUnauthorized) WithPayload(payload *models.Error) *PostWorkflowUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post workflow unauthorized response
func (o *PostWorkflowUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWorkflowUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostWorkflowForbiddenCode is the HTTP code returned for type PostWorkflowForbidden
const PostWorkflowForbiddenCode int = 403

/*
PostWorkflowForbidden Forbidden

swagger:response postWorkflowForbidden
*/
type PostWorkflowForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostWorkflowForbidden creates PostWorkflowForbidden with default headers values
func NewPostWorkflowForbidden() *PostWorkflowForbidden {

	return &PostWorkflowForbidden{}
}

// WithPayload adds the payload to the post workflow forbidden response
func (o *PostWorkflowForbidden) WithPayload(payload *models.Error) *PostWorkflowForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post workflow forbidden response
func (o *PostWorkflowForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWorkflowForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
PostWorkflowDefault generic error response

swagger:response postWorkflowDefault
*/
type PostWorkflowDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostWorkflowDefault creates PostWorkflowDefault with default headers values
func NewPostWorkflowDefault(code int) *PostWorkflowDefault {
	if code <= 0 {
		code = 500
	}

	return &PostWorkflowDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post workflow default response
func (o *PostWorkflowDefault) WithStatusCode(code int) *PostWorkflowDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post workflow default response
func (o *PostWorkflowDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post workflow default response
func (o *PostWorkflowDefault) WithPayload(payload *models.Error) *PostWorkflowDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post workflow default response
func (o *PostWorkflowDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWorkflowDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
