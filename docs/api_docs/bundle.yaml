swagger: '2.0'
info:
  description: >
    goliac is a golang REST application skeleton The base path for all the APIs
    is "/api/v1".
  title: goliac
  version: 1.0.0
tags:
  - name: health
    description: Check if goliac is healthy
x-tagGroups:
  - name: goliac Management
    tags:
      - app
  - name: Health Check
    tags:
      - health
  - name: External API
    description: APIs used to update Github synchronously with Goliac
    tags:
      - external
  - name: auth
    description: APIs used for authenticated users workflow
    tags:
      - auth
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
basePath: /api/v1
paths:
  /liveness:
    get:
      tags:
        - health
      operationId: getLiveness
      description: Check if Goliac is healthy
      responses:
        '200':
          description: status of health check
          schema:
            $ref: '#/definitions/health'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /readiness:
    get:
      tags:
        - health
      operationId: getReadiness
      description: Check if Goliac is ready to serve
      responses:
        '200':
          description: status of health check
          schema:
            $ref: '#/definitions/health'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /flushcache:
    post:
      tags:
        - app
      operationId: postFlushCache
      description: Flush the Github remote cache
      responses:
        '200':
          description: cache flushed
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /resync:
    post:
      tags:
        - app
      operationId: postResync
      description: Ask to sync again against Github
      responses:
        '200':
          description: resync in progress
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /status:
    get:
      tags:
        - app
      operationId: getStatus
      description: Get different status on Goliac
      responses:
        '200':
          description: get Goliac status
          schema:
            $ref: '#/definitions/status'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /users:
    get:
      tags:
        - app
      operationId: getUsers
      description: Get all users
      responses:
        '200':
          description: get list of users (organization or external)
          schema:
            $ref: '#/definitions/users'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /users/{userID}:
    get:
      tags:
        - app
      operationId: getUser
      parameters:
        - in: path
          name: userID
          description: user name
          required: true
          type: string
          minLength: 1
      description: Get user and associated teams and repos
      responses:
        '200':
          description: get user details especially teams and repositories
          schema:
            $ref: '#/definitions/userDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /collaborators:
    get:
      tags:
        - app
      operationId: getCollaborators
      description: Get all external collaborators
      responses:
        '200':
          description: get list of collarators
          schema:
            $ref: '#/definitions/users'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /collaborators/{collaboratorID}:
    get:
      tags:
        - app
      operationId: getCollaborator
      parameters:
        - in: path
          name: collaboratorID
          description: collaborator name
          required: true
          type: string
          minLength: 1
      description: Get collaborator and repos
      responses:
        '200':
          description: get collaborator details especially repositories
          schema:
            $ref: '#/definitions/collaboratorDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /teams:
    get:
      tags:
        - app
      operationId: getTeams
      description: Get all teams
      responses:
        '200':
          description: get list of teams
          schema:
            $ref: '#/definitions/teams'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /teams/{teamID}:
    get:
      tags:
        - app
      operationId: getTeam
      parameters:
        - in: path
          name: teamID
          description: team name
          required: true
          type: string
          minLength: 1
      description: Get team and associated users and repos
      responses:
        '200':
          description: get team details especially users and repositories
          schema:
            $ref: '#/definitions/teamDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /repositories:
    get:
      tags:
        - app
      operationId: getRepositories
      description: Get all repositories
      responses:
        '200':
          description: get list of repositories
          schema:
            $ref: '#/definitions/repositories'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /repositories/{repositoryID}:
    get:
      tags:
        - app
      operationId: getRepository
      parameters:
        - in: path
          name: repositoryID
          description: repository slug name
          required: true
          type: string
          minLength: 1
      description: Get repository and associated teams
      responses:
        '200':
          description: get repository details especially teams that have access
          schema:
            $ref: '#/definitions/repositoryDetails'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /statistics:
    get:
      tags:
        - app
      operationId: getStatitics
      description: Get different statistics on Goliac
      responses:
        '200':
          description: get Goliac statistics
          schema:
            $ref: '#/definitions/statistics'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /unmanaged:
    get:
      tags:
        - app
      operationId: getUnmanaged
      description: Get unmanaged resources metrics
      responses:
        '200':
          description: get Goliac unmanaged resources metrics
          schema:
            $ref: '#/definitions/unmanaged'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /external/createrepository:
    post:
      tags:
        - external
      operationId: postExternalCreateRepository
      description: Create a Repository via Goliac
      parameters:
        - name: body
          in: body
          description: Repository to create
          required: true
          schema:
            type: object
            required:
              - repository_name
              - github_token
              - team_name
            properties:
              repository_name:
                type: string
                minLength: 1
                x-nullable: false
              github_token:
                type: string
                minLength: 40
                x-nullable: false
              team_name:
                type: string
                minLength: 1
                x-nullable: false
              visibility:
                type: string
                default: private
                x-nullable: false
              default_branch:
                type: string
                default: main
                minLength: 1
                x-nullable: false
      responses:
        '200':
          description: repository created
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /auth/login:
    get:
      tags:
        - auth
      operationId: getAuthenticationLogin
      description: Authenticate the user
      parameters:
        - name: redirect
          in: query
          description: redirect url
          required: false
          type: string
      responses:
        '302':
          description: redirect to github login
          headers:
            Location:
              description: The URL to redirect to
              type: string
              format: uri
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /auth/callback:
    get:
      tags:
        - auth
      operationId: getAuthenticationCallback
      description: Receive the callback from github after authentication
      parameters:
        - name: code
          in: query
          description: code received from github
          required: true
          type: string
        - name: state
          in: query
          description: state received from github
          required: true
          type: string
      responses:
        '200':
          description: github user information
          schema:
            $ref: '#/definitions/githubuser'
        '302':
          description: redirect to github login
          headers:
            Location:
              description: The URL to redirect to
              type: string
              format: uri
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /auth/githubuser:
    get:
      tags:
        - auth
      operationId: getGithubUser
      description: Get the authenticated user information
      responses:
        '200':
          description: github user information
          schema:
            $ref: '#/definitions/githubuser'
        '401':
          description: unauthorized
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /auth/workflows:
    get:
      tags:
        - auth
      operationId: getWorkflows
      description: Get all PR force merge workflows
      responses:
        '200':
          description: get list of all PR force merge workflows
          schema:
            $ref: '#/definitions/workflows'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
  /auth/workflows/{workflowName}:
    post:
      tags:
        - auth
      operationId: postWorkflow
      description: Submit a workflow for execution
      parameters:
        - name: workflowName
          in: path
          description: workflow name
          required: true
          type: string
        - name: body
          in: body
          description: Workflow execution properties
          required: true
          schema:
            type: object
            required:
              - explanation
              - properties
            properties:
              properties:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      minLength: 1
                      x-nullable: false
                    value:
                      type: string
                      minLength: 1
                      x-nullable: false
              explanation:
                type: string
                minLength: 1
                x-nullable: false
      responses:
        '200':
          description: Workflow executed
          schema:
            $ref: '#/definitions/workflow'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
    get:
      tags:
        - auth
      operationId: getWorkflow
      description: Get Workflow information
      parameters:
        - name: workflowName
          in: path
          description: workflow name
          required: true
          type: string
      responses:
        '200':
          description: Workflow information
          schema:
            type: object
            properties:
              workflow_type:
                type: string
                minLength: 1
                x-nullable: false
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/error'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/error'
definitions:
  health:
    type: object
    properties:
      status:
        type: string
  users:
    type: array
    items:
      $ref: '#/definitions/user'
  user:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      githubid:
        type: string
        x-isnullable: false
  userDetails:
    type: object
    properties:
      githubid:
        type: string
        x-isnullable: false
      teams:
        type: array
        items:
          $ref: '#/definitions/team'
      repositories:
        type: array
        items:
          $ref: '#/definitions/repository'
  collaboratorDetails:
    type: object
    properties:
      githubid:
        type: string
        x-isnullable: false
      repositories:
        type: array
        items:
          $ref: '#/definitions/repository'
  repository:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      visibility:
        type: string
        x-isnullable: false
        x-omitempty: false
      autoMergeAllowed:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      deleteBranchOnMerge:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      allowUpdateBranch:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      archived:
        type: boolean
        x-isnullable: false
        x-omitempty: false
  repositories:
    type: array
    items:
      $ref: '#/definitions/repository'
  repositoryDetails:
    type: object
    properties:
      organization:
        type: string
        x-isnullable: false
      name:
        type: string
        x-isnullable: false
      visibility:
        type: string
        x-isnullable: false
        x-omitempty: false
      archived:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      autoMergeAllowed:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      deleteBranchOnMerge:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      allowUpdateBranch:
        type: boolean
        x-isnullable: false
        x-omitempty: false
      teams:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            access:
              type: string
              minLength: 1
      collaborators:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            access:
              type: string
              minLength: 1
      variables:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            value:
              type: string
      secrets:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
      environments:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            variables:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  value:
                    type: string
            secrets:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
  teams:
    type: array
    items:
      $ref: '#/definitions/team'
  team:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      path:
        type: string
        x-isnullable: false
      owners:
        type: array
        items:
          type: string
          minLength: 1
      members:
        type: array
        items:
          type: string
          minLength: 1
  teamDetails:
    type: object
    properties:
      name:
        type: string
        x-isnullable: false
      path:
        type: string
        x-isnullable: false
      owners:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            githubid:
              type: string
              x-isnullable: false
            external:
              type: boolean
              x-isnullable: false
              x-omitempty: false
      members:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              minLength: 1
            githubid:
              type: string
              x-isnullable: false
            external:
              type: boolean
              x-isnullable: false
              x-omitempty: false
      repositories:
        type: array
        items:
          $ref: '#/definitions/repository'
  status:
    type: object
    properties:
      organization:
        type: string
        x-isnullable: false
      lastSyncTime:
        type: string
        minLength: 1
      lastSyncError:
        type: string
      nbUsers:
        type: integer
        x-omitempty: false
      nbUsersExternal:
        type: integer
        x-omitempty: false
      nbTeams:
        type: integer
        x-omitempty: false
      nbRepos:
        type: integer
        x-omitempty: false
      version:
        type: string
      detailedErrors:
        type: array
        items:
          type: string
      detailedWarnings:
        type: array
        items:
          type: string
      nbWorkflows:
        type: integer
        x-omitempty: false
  statistics:
    properties:
      lastTimeToApply:
        type: string
        x-omitempty: false
      lastGithubApiCalls:
        type: integer
        x-omitempty: false
      lastGithubThrottled:
        type: integer
        x-omitempty: false
      maxTimeToApply:
        type: string
        x-omitempty: false
      maxGithubApiCalls:
        type: integer
        x-omitempty: false
      maxGithubThrottled:
        type: integer
        x-omitempty: false
  unmanaged:
    properties:
      users:
        type: array
        items:
          type: string
          minLength: 1
      externally_managed_teams:
        type: array
        items:
          type: string
          minLength: 1
      teams:
        type: array
        items:
          type: string
          minLength: 1
      repos:
        type: array
        items:
          type: string
          minLength: 1
      rulesets:
        type: array
        items:
          type: string
          minLength: 1
  error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        minLength: 1
  githubuser:
    type: object
    properties:
      github_id:
        type: string
        x-isnullable: false
      name:
        type: string
        x-isnullable: false
  workflows:
    type: array
    items:
      type: object
      properties:
        workflow_name:
          type: string
          x-isnullable: false
        workflow_type:
          type: string
          x-isnullable: false
        workflow_description:
          type: string
          x-isnullable: false
  workflow:
    type: object
    properties:
      message:
        type: string
        x-isnullable: false
      tracking_urls:
        type: array
        items:
          type: string
          minLength: 1
